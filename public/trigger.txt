Membuat Store Fuction
1. Masuk mysql dengan mysql u root -p
2. Use database shopkoding use shopkoding;
3. Tambahkan function ketKategori()
    DELIMITER $$
    CREATE FUNCTION ketKategorik(kat VARCHAR(4))
    RETURNS varchar(30)
    BEGIN
    IF kat = 'M' THEN
    return "Modal Barang";
    ELSEIF kat="A" THEN
    RETURN "Alat";
    ELSEIF kat="BHP" THEN
    RETURN "Bahan Habis Pakai";
    ELSEIF kat="BTHP" THEN
    RETURN "Bahan Tidak Habis Pakai";
    END IF;
    END$$
    DELIMITER ;

Membuat Store Procedure
1. Masuk mysql dengan mysql u root -p
2. Use database shopkoding use shopkoding;
3. Tambahkan function ketKategoriAll() sehingga dapat mengakses seluruh
record dari tabel kategori
    DELIMITER $$
    CREATE PROCEDURE getKategoriAll()
    BEGIN
     SELECT * FROM kategori;
    END$$
    DELIMITER ;

Membuat Trigger
1. Masuk mysql dengan mysql u root -p
2. Use database shopkoding use shopkoding;
3. Create trigger tambah_stok untuk mengelola perubahan yaitu penambahan
stok
diantara tabel barang dan tabel barangmasuk
    DELIMITER //
    CREATE TRIGGER tambah_stok AFTER INSERT ON barangmasuk
    FOR EACH ROW
    BEGIN
    UPDATE barang SET barang.stok = barang.stok +
    NEW.qty_masuk WHERE barang.id = NEW.barang_id;
    END;
    //
    DELIMITER ;

4. Create trigger kurangi_stok untuk mengelola perubahan yaitu mengurangi
stok diantara tabel barang dan tabel barangmasuk
    DELIMITER //
    CREATE TRIGGER kurangi_stok AFTER INSERT ON barangkeluar
    FOR EACH ROW
    BEGIN
    UPDATE barang SET barang.stok = barang.stok -
    NEW.qty_keluar WHERE barang.id = NEW.barang_id;
    END;
    //
    DELIMITER ;
5. Create trigger edit_tambah_stok untuk mengelola perubahan stok diantara
tabel barang dan tabel barangmasuk
    DELIMITER //
    CREATE TRIGGER edit_tambah_stok AFTER UPDATE ON barangmasuk
    FOR EACH ROW
    BEGIN
    UPDATE barang SET barang.stok = barang.stok +
    (NEW.qty_masuk -OLD.qty_masuk) WHERE barang.id =
    NEW.barang_id;
    END;
    //
    DELIMITER ;

6. Create trigger edit_kurangi_stok untuk mengelola perubahan stok diantara
tabel barangdan tabel barangmasuk
    DELIMITER //
    CREATE TRIGGER edit_kurangi_stok AFTER UPDATE ON
    barangkeluar
    FOR EACH ROW
    BEGIN
    UPDATE barang SET barang.stok = barang.stok -
    (NEW.qty_keluar - OLD.qty_keluar) WHERE barang.id =
    NEW.barang_id;
    END;
    //
    DELIMITER ;

7. Create trigger barangmasuk_undo_stokdelete untuk menghapus stok
diantara tabel barang dari tabel barangmasuk
    DELIMITER $$
    CREATE TRIGGER barangmasuk_undo_stokdelete
    BEFORE DELETE ON barangmasuk
    FOR EACH ROW
    BEGIN
    UPDATE barang
    SET barang.stok = barang.stok - OLD.qty_masuk
    WHERE barang.id = OLD.barang_id;
    END$$
    DELIMITER ;

8. Create trigger barangkeluar_undo_stokdelete untuk menghapus stok
diantara tabel barang dari tabel barangmasuk
    DELIMITER $$
    CREATE TRIGGER barangkeluar_undo_stokdelete
    BEFORE DELETE ON barangkeluar
    FOR EACH ROW
    BEGIN
    UPDATE barang
    SET barang.stok = barang.stok + OLD.qty_keluar
    WHERE barang.id = OLD.barang_id;
    END$$
    DELIMITER ;